[config]
reports=test1,test2,test3,test4,test5,test6,test7,test8,test9
#,test10,test11,test12,test13,test14,test15,test16,test21-1,test21-2,test21-3,test21-4,test22-1,test22-2,test22-3,test22-4


[test1]
operations=op1
file=test1uniqueline.csv
format=csv
type=line

op1_action=uniquecount
op1_legend=UNIQUEUSERNAMES
op1_target=interaction.author.username

[test2]
operations=op1
file=unit2totalline.csv
format=csv
type=line

op1_action=count
op1_legend=COUNTINTERACTIONS
op1_target=interaction.author.username

[test3]
operations=op1,op2
file=unit3sumall.csv
format=csv
type=line

op1_action=return
op1_target=interaction.author.username

op2_action=sum
op2_target=interaction.testcount

[test4]
operations=op1,op2
file=unit4avgall.csv
format=csv
type=line

op1_action=return
op1_target=interaction.author.username

op2_action=average
op2_target=interaction.testcount

[test5]
operations=op1,op2,op3
file=unit5sumwhereline.csv
format=csv
type=line

op1_action=return
op1_target=interaction.author.username

op2_action=include_key
op2_values=test1

op3_action=sum
op3_target=interaction.testcount

[test6]
operations=op1,op2,op3
file=unit6avgwhereline.csv
format=csv
type=line

op1_action=return
op1_target=interaction.author.username

op2_action=include_key
op2_values=test1

op3_action=average
op3_target=interaction.testcount

#unit6avgwhereline.csv:csv:line:avg:interaction.author.username|USERNAME:test1:interaction.testcount


[test7]
operations=op1,op2
file=unit7avgline.csv
format=csv
type=line

op1_action=return
op1_target=interaction.tags

op2_action=average
op2_target=interaction.testcount


[test8]
operations=op1,op2
file=unit8uniqueusersbytag.csv
format=csv
type=line

op1_action=return
op1_target=interaction.tags

op2_action=uniquecount
op2_target=interaction.author.username


[test9]
operations=op1,op2,op3
file=unit9totalcountbytag.csv
format=csv
type=line

op1_action=return
op1_target=interaction.tags

op2_action=include_key
op2_values=tag1

op3_action=count
op3_target=interaction.author.username


#unit10countunique.csv:csv:summary:uniquecount:interaction.author.username|COUNTUNIQUE
#unit11countall.csv:csv:summary:totalcount:interaction.author.username|TOTALCOUNT
#unit12countmatch.csv:csv:summary:count:interaction.author.username|USERNAME:test1,test2,test3
#unit13sum.csv:csv:summary:sum:interaction.author.username:*:interaction.testcount
#unit14avg.csv:csv:summary:avg:interaction.author.username:*:interaction.testcount
#unit15avg.csv:csv:summary:avg:interaction.tags:tag1,tag2:interaction.testcount
#unit16avg.csv:csv:summary:uniquecount:interaction.tags:tag1,tag2:interaction.author.username
#
#unit21lineaggregate.csv:csv:line:uniquecount:interaction.author.username|UNIQUEUSERNAMES
#unit21lineaggregate.csv:csv:line:totalcount:interaction.author.username|COUNTINTERACTIONS
#unit21lineaggregate.csv:csv:line:sum:interaction.author.username|USERNAME:*:interaction.testcount
#unit21lineaggregate.csv:csv:line:avg:interaction.tags:*:interaction.testcount
#unit22sumaggregate.csv:csv:summary:uniquecount:interaction.author.username|COUNTUNIQUE
#unit22sumaggregate.csv:csv:summary:totalcount:interaction.author.username|TOTALCOUNT
#unit22sumaggregate.csv:csv:summary:count:interaction.author.username|USERNAME:test1,test2,test3
#unit22sumaggregate.csv:csv:summary:avg:interaction.tags:*:interaction.testcount

[exampleconfig]
# provide the list and sequence of operations. The final operation should always output data
operations=x,y,z
# name the output file
file=output.csv
# define the format of the output file
format=csv
# Define the type of output file being generated (line or summary)
type=summary

# For each operation, create a series of variables x_[param]
# There are three types of operations:
#       1. key identification : action = return
#       2. data processing operations: action = exclude_data | include_data | exclude_key | include_key
#       3. Metric extraction operations: action = sum | average | [mean] | count | uniquecount

# Key identifcation:
# Used to extract keys which are then used to sub-group data. When you select a key, this is what data will be grouped by
# Required operation params: 
#       action = return
#       target = [the json namespace, i.e. interaction.author.username]

# Data Processing operations:
# The equivalent of localized filtering
# Supports two main types of filtering -- filtering by key where it is performed after keys have been extracted; filtering by data where local filtering is performed on output in a particular field
# Required operation params:
#       action = exclude_data | include_data | exclude_key, include_key
#       values = [a comma separated list of values to compare against]
# Required operation params when performing data filtering:
#       comparator = equals | contains | gt | ge | lt | le
#               gt / ge / lt / le will only work for numeric fields
#       target = [the json namespace to perform data filtering on]

# Metric extraction operatoins:
# This is where we aggregate the output data
# If a key is defined, that will define the level / value at which data is aggregated. 
# Required operation params:
#       action = sum | average | [*mean] | count | uniquecount
#               *mean is not yet supported
#       target = [the json namespace to perform the aggregation on]

#unit1uniqueline.csv:csv:line:uniquecount:interaction.author.username|UNIQUEUSERNAMES
#unit2totalline.csv:csv:line:totalcount:interaction.author.username|COUNTINTERACTIONS
#unit3sumall.csv:csv:line:sum:interaction.author.username|USERNAME:*:interaction.testcount
#unit4avgall.csv:csv:line:avg:interaction.author.username|USERNAME:*:interaction.testcount
#unit5sumwhereline.csv:csv:line:sum:interaction.author.username|USERNAME:test1:interaction.testcount
#unit6avgwhereline.csv:csv:line:avg:interaction.author.username|USERNAME:test1:interaction.testcount
#unit7avgline.csv:csv:line:avg:interaction.tags:*:interaction.testcount
#unit8uniqueusersbytag.csv:csv:line:uniquecount:interaction.tags:*:interaction.author.username
#unit9totalcountbytag.csv:csv:line:totalcount:interaction.tags:tag1:interaction.author.username
